<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.19">

  <!-- unsupported kind of display : PointMap -->


    
  <!-- Spot Style - Sphere -->


  <style name="IconSphere"
         url="%FIRSTXML%/spots/sphere_user_defaultpoint8.png"
         visible="false"
         edge="center"
         alpha="0.8"
         onhover="onhoverIconSphere"
         onover="onoverIconSphere"
         onout="onoutIconSphere"

         height="80"
         width="80"
         />
  <action name="onhoverIconSphere">
    showtooltip('hotspot');
  </action>
  <action name="onoverIconSphere">
tween(scale, 1.2);
tween(alpha, 1);
pauseautorotation(forcehotspot);

  </action>
  <action name="onoutIconSphere">
    hideTooltip();
    tween(scale, 1);
    tween(alpha, 0.8);
resumeautorotation(forcehotspot);

  </action>



<!-- ********** -->
<!-- Analytics -->
<!-- id : analytics -->
<!-- ********** -->

<ptplugin name="analytics" engine="kolorAnalytics">
	<settings>
		<option name="source" value="google" type="string" />
		<option name="tracking_id" value="UA-75931124-1" type="string" />
		<option name="force_ssl" value="false" type="bool" />
		<option name="force_test" value="false" type="bool" />
		<option name="start_page" value="District Center v3" type="string" />
		<option name="start_title" value="SmithGroup VR Theta" type="string" />
		<option name="start_lang" value="en" type="string" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
</ptplugin>

<action name="kolorAnalyticsJsReady_analytics">
	set(ptplugin[analytics].jsready, true);
</action>

<action name="activate_analytics">
	if(ptplugin[analytics].jsready,
		stopdelayedcall(delay_analytics_active);
		js(invokePluginFunction(analytics, toggleDeactivation, false));
	,
		delayedcall(delay_analytics_active, 0.1, activate_analytics(););
	);
</action>

<action name="deactivate_analytics">
	if(ptplugin[analytics].jsready,
		stopdelayedcall(delay_analytics_active);
		js(invokePluginFunction(analytics, toggleDeactivation, true));
	,
		delayedcall(delay_analytics_active, 0.1, deactivate_analytics(););
	);
</action>

<action name="sendPage_analytics">
	if(ptplugin[analytics].jsready,
		stopdelayedcall(delay_analytics_page);
		js(invokePluginFunction(analytics, sendPageview, %1, %2));
	,
		delayedcall(delay_analytics_page,0.5,sendPage_analytics(%1,%2));
	);
</action>

<!-- 
sendEvent_analytics action :
* param1 : category
* param2 : action
* param3 : label
* param4 : number value
-->
<action name="sendEvent_analytics">
	if(ptplugin[analytics].jsready,
		stopdelayedcall(delay_analytics_event);
		js(invokePluginFunction(analytics, sendEvent, %1, %2, %3, %4));
	,
		delayedcall(delay_analytics_event,0.5,sendEvent_analytics(%1,%2,%3,%4));
	);
</action>

<action name="changeLanguage_analytics">
	if(ptplugin[analytics].jsready,
		stopdelayedcall(delay_analytics_lang);
		js(invokePluginFunction(analytics, changeLanguage));
	,
		delayedcall(delay_analytics_lang,0.1,changeLanguage_analytics());
	);
</action>

<events name="kolorAnalyticsEvents_analytics" 
	keep="true"
	onTourStart="sendEvent_analytics('panotour','tour start', 'SmithGroup VR Theta');"
	onnewpano="sendPage_analytics(get(scene[get(xml.scene)].name), get(scene[get(xml.scene)].titleid));"
	changetourlanguage="changeLanguage_analytics();"
	/>

<!-- ********** -->
<!-- Loading transition -->
<!-- id : blendmode -->
<!-- ********** -->
	<action name="blendmode_prepareblendmode" autorun="preinit">

			set(ptblendmode, 'BLEND(1, easeInCubic)');

	</action>

<!-- ********** -->
<!-- Context menu -->
<!-- id : contextmenu -->
<!-- ********** -->
  <contextmenu fullscreen="false" versioninfo="false" touch="true" customstyle="default|14|default|0xFFFFFF|0x000000|0xBBBBBB|0|0|5|2|2|8|0x66000000|0|0|1|4|5|0xEEEEEE|none|1|0|0|0|3|0xEEEEEE|0|0|20|12">
    <item name="website1" onclick="getmessage(urltoopen,contextmenuwebsiteurl1);openurl(get(urltoopen),_blank);" />
  </contextmenu>

  <events name="contextmenuevents" keep="true" 
    onenterfullscreen="updateContextMenu" onexitfullscreen="updateContextMenu" 
    onxmlcomplete="updateContextMenu" 
    changetourlanguage="updateContextMenu" 
    />
  <events name="contextmenuvrevents" keep="true" 
    onvravailable="updateContextMenu();" onvrunavailable="updateContextMenu();"
    devices="html5"
    />
  <action name="updateContextMenu">
    getmessage(contextmenu.item[website1].caption, contextmenuopenwebsitelabel1);
  </action>


<!-- ********** -->
<!-- Sound Button -->
<!-- id : togglebutton3 -->
<!-- ********** -->



  <layer name="togglebutton3"
         keep="true"
         url="%FIRSTXML%/graphics/togglebutton3/sound_off.png" 
         align="bottomleft"
         x="25"
         y="549"
         zorder="5"
         tooltip=""
         onhover="togglebutton3OnHover"
         state="true"
         onclick="togglebutton3OnClick"
         alpha="0.7"
         onover="tween(scale, 1.2,0.5,easeOutQuad);tween(alpha,1.0,0.5,easeOutQuad);"
         onout="hideTooltip();tween(scale, 1.0,0.5,easeOutQuad);tween(alpha,0.7,0.5,easeOutQuad);"
         height="80"
         width="80"
         visible="false"
         />

  <action name="togglebutton3OnHover">
    if (state,
      set(tooltip, togglebutton3firsttooltip);
     ,
      set(tooltip, togglebutton3secondtooltip);
    );
    if (tooltip != "", showTooltip('plugin'););
  </action>
  <action name="togglebutton3OnClick">
    if (state,
      set(state, false);stopTourSounds();


      set(url,%FIRSTXML%/graphics/togglebutton3/sound_on.png);
     ,
      set(state, true);playTourSounds();


      set(url,%FIRSTXML%/graphics/togglebutton3/sound_off.png);
    );
  </action>

  <events name="togglebutton3events" 
    hidetourcontrols="hidetogglebutton3();" 
    showtourcontrols="showtogglebutton3();" 
    keep="true" />
  <action name="hidetogglebutton3">set(layer[togglebutton3].visible, false);</action>
  <action name="showtogglebutton3">if(tour_displaycontrols,set(layer[togglebutton3].visible, true);,hidetogglebutton3(););</action>


<!-- ********** -->
<!-- Sphere View/Hide Button -->
<!-- id : togglebutton2 -->
<!-- ********** -->



  <layer name="togglebutton2"
         keep="true"
         url="%FIRSTXML%/graphics/togglebutton2/spheres_off.png" 
         align="bottomleft"
         x="25"
         y="445"
         zorder="6"
         tooltip=""
         onhover="togglebutton2OnHover"
         state="true"
         onclick="togglebutton2OnClick"
         alpha="0.7"
         onover="tween(scale, 1.2,0.5,easeOutQuad);tween(alpha,1.0,0.5,easeOutQuad);"
         onout="hideTooltip();tween(scale, 1.0,0.5,easeOutQuad);tween(alpha,0.7,0.5,easeOutQuad);"
         height="80"
         width="80"
         visible="false"
         />

  <action name="togglebutton2OnHover">
    if (state,
      set(tooltip, togglebutton2firsttooltip);
     ,
      set(tooltip, togglebutton2secondtooltip);
    );
    if (tooltip != "", showTooltip('plugin'););
  </action>
  <action name="togglebutton2OnClick">
    if (state,
      set(state, false);hideHotspots();


      set(url,%FIRSTXML%/graphics/togglebutton2/spheres_on.png);
     ,
      set(state, true);showHotspots();


      set(url,%FIRSTXML%/graphics/togglebutton2/spheres_off.png);
    );
  </action>

  <events name="togglebutton2events" 
    hidetourcontrols="hidetogglebutton2();" 
    showtourcontrols="showtogglebutton2();" 
    keep="true" />
  <action name="hidetogglebutton2">set(layer[togglebutton2].visible, false);</action>
  <action name="showtogglebutton2">if(tour_displaycontrols,set(layer[togglebutton2].visible, true);,hidetogglebutton2(););</action>


<!-- ********** -->
<!-- Zoom Button -->
<!-- id : togglebutton1 -->
<!-- ********** -->



  <layer name="togglebutton1"
         keep="true"
         url="%FIRSTXML%/graphics/togglebutton1/zoom_in.png" 
         align="bottomleft"
         x="25"
         y="340"
         zorder="7"
         tooltip=""
         onhover="togglebutton1OnHover"
         state="true"
         onclick="togglebutton1OnClick"
         alpha="0.7"
         onover="tween(scale, 1.2,0.5,easeOutQuad);tween(alpha,1.0,0.5,easeOutQuad);"
         onout="hideTooltip();tween(scale, 1.0,0.5,easeOutQuad);tween(alpha,0.7,0.5,easeOutQuad);"
         height="80"
         width="80"
         visible="false"
         />

  <action name="togglebutton1OnHover">
    if (state,
      set(tooltip, togglebutton1firsttooltip);
     ,
      set(tooltip, togglebutton1secondtooltip);
    );
    if (tooltip != "", showTooltip('plugin'););
  </action>
  <action name="togglebutton1OnClick">
    if (state,
      set(state, false);viewControlZoomIn(true,30);

      set(url,%FIRSTXML%/graphics/togglebutton1/zoom_out.png);
     ,
      set(state, true);viewControlZoomOut(true,90);


      set(url,%FIRSTXML%/graphics/togglebutton1/zoom_in.png);
    );
  </action>

  <events name="togglebutton1events" 
    hidetourcontrols="hidetogglebutton1();" 
    showtourcontrols="showtogglebutton1();" 
    keep="true" />
  <action name="hidetogglebutton1">set(layer[togglebutton1].visible, false);</action>
  <action name="showtogglebutton1">if(tour_displaycontrols,set(layer[togglebutton1].visible, true);,hidetogglebutton1(););</action>


<!-- ********** -->
<!-- View Arch/Planet Button -->
<!-- id : togglebutton -->
<!-- ********** -->



  <layer name="togglebutton"
         keep="true"
         url="%FIRSTXML%/graphics/togglebutton/view_little_planet.png" 
         align="bottomleft"
         x="25"
         y="235"
         zorder="8"
         tooltip=""
         onhover="togglebuttonOnHover"
         state="true"
         onclick="togglebuttonOnClick"
         alpha="0.7"
         onover="tween(scale, 1.2,0.5,easeOutQuad);tween(alpha,1.0,0.5,easeOutQuad);"
         onout="hideTooltip();tween(scale, 1.0,0.5,easeOutQuad);tween(alpha,0.7,0.5,easeOutQuad);"
         height="80"
         width="80"
         visible="false"
         />

  <action name="togglebuttonOnHover">
    if (state,
      set(tooltip, togglebuttonfirsttooltip);
     ,
      set(tooltip, togglebuttonsecondtooltip);
    );
    if (tooltip != "", showTooltip('plugin'););
  </action>
  <action name="togglebuttonOnClick">
    if (state,
      set(state, false);setViewLittlePlanet();


      set(url,%FIRSTXML%/graphics/togglebutton/view_architectural.png);
     ,
      set(state, true);setViewArchitectural();


      set(url,%FIRSTXML%/graphics/togglebutton/view_little_planet.png);
    );
  </action>

  <events name="togglebuttonevents" 
    hidetourcontrols="hidetogglebutton();" 
    showtourcontrols="showtogglebutton();" 
    keep="true" />
  <action name="hidetogglebutton">set(layer[togglebutton].visible, false);</action>
  <action name="showtogglebutton">if(tour_displaycontrols,set(layer[togglebutton].visible, true);,hidetogglebutton(););</action>


<!-- ********** -->
<!-- Screen Size Button -->
<!-- id : togglebutton5 -->
<!-- ********** -->



  <layer name="togglebutton5"
         keep="true"
         url="%FIRSTXML%/graphics/togglebutton5/screen_full.png" 
         align="bottomleft"
         x="25"
         y="130"
         zorder="9"
         tooltip=""
         onhover="togglebutton5OnHover"
         state="true"
         onclick="togglebutton5OnClick"
         alpha="0.7"
         onover="tween(scale, 1.2,0.5,easeOutQuad);tween(alpha,1.0,0.5,easeOutQuad);"
         onout="hideTooltip();tween(scale, 1.0,0.5,easeOutQuad);tween(alpha,0.7,0.5,easeOutQuad);"
         height="80"
         width="80"
         visible="false"
         />

  <action name="togglebutton5OnHover">
    if (state,
      set(tooltip, togglebutton5firsttooltip);
     ,
      set(tooltip, togglebutton5secondtooltip);
    );
    if (tooltip != "", showTooltip('plugin'););
  </action>
  <action name="togglebutton5OnClick">
    if (state,
      set(state, false);enterFullscreen();
setViewArchitectural();


      set(url,%FIRSTXML%/graphics/togglebutton5/screen_min.png);
     ,
      set(state, true);exitFullscreen();


      set(url,%FIRSTXML%/graphics/togglebutton5/screen_full.png);
    );
  </action>

  <events name="togglebutton5events" 
    hidetourcontrols="hidetogglebutton5();" 
    showtourcontrols="showtogglebutton5();" 
    keep="true" />
  <action name="hidetogglebutton5">set(layer[togglebutton5].visible, false);</action>
  <action name="showtogglebutton5">if(tour_displaycontrols,set(layer[togglebutton5].visible, true);,hidetogglebutton5(););</action>


<!-- ********** -->
<!-- WebVR Button -->
<!-- id : webvrbutton -->
<!-- ********** -->

	<layer name="webvrbutton"
		keep="true"
		blocked="false"
		url="%FIRSTXML%/graphics/webvrbutton/vr.png" 
		align="bottomleft"
		x="236"
		y="25"
		zorder="10"
		visible="false"
		onclick="if(scene[get(xml.scene)].full360,
    js(accessWebVr(get(xml.scene),get(videoscenestarttime)));
,
    js(accessWebVr(null));
);"
		tooltip="webvrbuttontooltip"
		onhover="showTooltip('plugin');"
		onout="hideTooltip();"

		height="80"
		width="80"
		/>

	<events name="webvrbuttonevents"
		onvrunavailable="hidewebvrbutton(true);"
		onTourStart="showwebvrbutton();"
		keep="true" />
	<action name="hidewebvrbutton">if(%1 == true,set(layer[webvrbutton].blocked, true););set(layer[webvrbutton].visible, false);</action>
	<action name="showwebvrbutton">if(layer[webvrbutton].blocked == false,set(layer[webvrbutton].visible, true););</action>


<!-- ********** -->
<!-- Floorplan Show/Hide Button -->
<!-- id : togglebutton6 -->
<!-- ********** -->



  <layer name="togglebutton6"
         keep="true"
         url="%FIRSTXML%/graphics/togglebutton6/map_show.png" 
         align="bottomleft"
         x="130"
         y="25"
         zorder="11"
         tooltip=""
         onhover="togglebutton6OnHover"
         state="true"
         onclick="togglebutton6OnClick"
         alpha="0.7"
         onover="tween(scale, 1.2,0.5,easeOutQuad);tween(alpha,1.0,0.5,easeOutQuad);"
         onout="hideTooltip();tween(scale, 1.0,0.5,easeOutQuad);tween(alpha,0.7,0.5,easeOutQuad);"
         height="80"
         width="80"
         visible="false"
         />

  <action name="togglebutton6OnHover">
    if (state,
      set(tooltip, togglebutton6firsttooltip);
     ,
      set(tooltip, togglebutton6secondtooltip);
    );
    if (tooltip != "", showTooltip('plugin'););
  </action>
  <action name="togglebutton6OnClick">
    if (state,
      set(state, false);showFloorplan();


      set(url,%FIRSTXML%/graphics/togglebutton6/map_hide.png);
     ,
      set(state, true);hideFloorplan();


      set(url,%FIRSTXML%/graphics/togglebutton6/map_show.png);
    );
  </action>

  <events name="togglebutton6events" 
    onTourStart="showtogglebutton6();"
    keep="true" />
  <action name="hidetogglebutton6">set(layer[togglebutton6].visible, false);</action>
  <action name="showtogglebutton6">set(layer[togglebutton6].visible, true);</action>


<!-- ********** -->
<!-- Logo 2nd -->
<!-- id : logo1 -->
<!-- ********** -->

  <layer align="bottomright"
         x="30"
         y="130"
         zorder="12"
         name="logo1"
         keep="true"
         visible="false"
         capture="false"

			tooltip="logo1tooltipText"
			onhover="showTooltip('plugin');"
			onout="hideTooltip();"
         url="%FIRSTXML%/graphics/logo1/hdphoto.png" 
         onclick="
getmessage(urltoopen,logo1websiteurl);openurl(get(urltoopen),_blank);
"

         height="80"
         width="prop"

         />

  <events name="logo1events" 
    hidetourcontrols="hidelogo1();"
    showtourcontrols="showlogo1();"
    keep="true" />

  <action name="hidelogo1">
    set(layer[logo1].visible, false);
  </action>
  <action name="showlogo1">
    if (tour_displaycontrols,
      set(layer[logo1].visible, true);
    );
  </action>




<!-- ********** -->
<!-- Logo Main -->
<!-- id : logo -->
<!-- ********** -->

  <layer align="bottomright"
         x="30"
         y="25"
         zorder="13"
         name="logo"
         keep="true"
         visible="false"
         capture="false"

			tooltip="logotooltipText"
			onhover="showTooltip('plugin');"
			onout="hideTooltip();"
         url="%FIRSTXML%/graphics/logo/hdphoto.png" 
         onclick="
getmessage(urltoopen,logowebsiteurl);openurl(get(urltoopen),_blank);
"

         height="80"
         width="prop"

         />

  <events name="logoevents" 
    onTourStart="showlogo();"
    keep="true" />

  <action name="hidelogo">
    set(layer[logo].visible, false);
  </action>
  <action name="showlogo">
      set(layer[logo].visible, true);
  </action>




<!-- ********** -->
<!-- Controls Button -->
<!-- id : togglebutton4 -->
<!-- ********** -->



  <layer name="togglebutton4"
         keep="true"
         url="%FIRSTXML%/graphics/togglebutton4/controls_on.png" 
         align="bottomleft"
         x="25"
         y="25"
         zorder="14"
         tooltip=""
         onhover="togglebutton4OnHover"
         state="true"
         onclick="togglebutton4OnClick"
         alpha="0.7"
         onover="tween(scale, 1.2,0.5,easeOutQuad);tween(alpha,1.0,0.5,easeOutQuad);"
         onout="hideTooltip();tween(scale, 1.0,0.5,easeOutQuad);tween(alpha,0.7,0.5,easeOutQuad);"
         height="80"
         width="80"
         visible="false"
         />

  <action name="togglebutton4OnHover">
    if (state,
      set(tooltip, togglebutton4firsttooltip);
     ,
      set(tooltip, togglebutton4secondtooltip);
    );
    if (tooltip != "", showTooltip('plugin'););
  </action>
  <action name="togglebutton4OnClick">
    if (state,
      set(state, false);showTourControls();


      set(url,%FIRSTXML%/graphics/togglebutton4/controls_off.png);
     ,
      set(state, true);hideTourControls();


      set(url,%FIRSTXML%/graphics/togglebutton4/controls_on.png);
    );
  </action>

  <events name="togglebutton4events" 
    onTourStart="showtogglebutton4();"
    keep="true" />
  <action name="hidetogglebutton4">set(layer[togglebutton4].visible, false);</action>
  <action name="showtogglebutton4">set(layer[togglebutton4].visible, true);</action>


<!-- ********** -->
<!-- Loading Picture -->
<!-- id : LoaderImage -->
<!-- ********** -->


  <layer name="LoaderImage"
         keep="true"
         url="%FIRSTXML%/graphics/loadingpicture/loading.png" 
         align="center"
         x="0"
         y="0"
         zorder="15"
		 visible="false"
		 enabled="false"
		 alpha="1"

         height="115"
         width="115"

         />

  <action name="displayLoaderImage">
    if(scene[get(xml.scene)].video,
      set(layer[LoaderImage].visible, false);
    ,
      set(layer[LoaderImage].visible, %1);
    );
  </action>
	
  <events name="displayLoaderImageWhenLoading" keep="true"
    onnewpano="displayLoaderImage(true);"
    onremovepano="displayLoaderImage(true);"
    onloadcomplete="displayLoaderImage(false);"
  />

<!-- ********** -->
<!-- Loading Information -->
<!-- id : loaderinfo -->
<!-- ********** -->

  <events name="loaderinfoevent" onxmlcomplete="loaderinfoupdate();" keep="true"/>

  <action name="loaderinfoupdate">
    if(scene[get(xml.scene)].video,
      set(layer[loaderinfotextfield].visible, false);
    ,
      if (progress.progress == 1,
        delayedcall(0.5, set(layer[loaderinfotextfield].visible, false); );
      ,
        set(layer[loaderinfotextfield].visible, true);
      );
      mul(progresstext, get(progress.progress),100);
      roundval(progresstext);
      txtadd(progresstext, get(progresstext), %);
      set(layer[loaderinfotextfield].html, get(progresstext));
      ifnot(progress.progress GE 1, delayedcall(0.01, loaderinfoupdate() ));
    );
  </action>

  <layer name="loaderinfotextfield"
         keep="true"
         zorder="16"
         type="text"
         align="center"
         x="0"
         y="0"
         bgborder="0"
         bg="false"
         capture="false"
         handcursor="false"
         interactivecontent="false"
         alpha="1"
         visible="true"
         css="
         text-align:center;
         color:#ffffff;
         font-family:Helvetica Neue;
         font-size:16px;
         "
  />

<action name="setViewArchitectural">
	if(normalViewActivated,stopSetViewTweens(););
	if(current_view_isflat === true,
		setViewNonFlat(VFOV);
	);
	setViewArchitecturalComplete();
</action>

<action name="setViewArchitecturalComplete">
	set(view.fovmax, get(panoview.fovmax));
	set(view.fisheyefovlink, 0.5);
	tween(view.architectural, 1.0, distance(1.0, 0.45));
	tween(view.pannini, 0.0, distance(1.0, 0.45), easeOutQuad, if(panniniViewActivated,restoreViewFromPannini();););
	tween(view.fisheye, 0.0, distance(1.0, 0.45), easeOutQuad, 
		set(view.stereographic,false);
		tween(view.vlookat, get(panoview.v), distance(90, 0.45));
	);
	tween(view.fov, get(panoview.fov), distance(50, 0.45));
</action>

<action name="setViewLittlePlanet">
	set(sceneisfull360, false);
	if(scene[get(xml.scene)].full360,
		sub(viewhfov, panoview.hmax, panoview.hmin);
		if (viewhfov == 360,
			sub(viewvfov, panoview.vmax, panoview.vmin);
			if (viewvfov == 180,
				set(sceneisfull360, true);
			);
		);
	);
	if (sceneisfull360 AND (device.webgl OR device.flash),
		if(normalViewActivated,stopSetViewTweens(););
		if(current_view_isflat === true,
			setViewNonFlat(VFOV);
		);
		setViewLittlePlanetComplete();
	);
</action>

<action name="setViewLittlePlanetComplete">
	set(backtonormalfirst,false);
	if(view.pannini GE 1.0, set(backtonormalfirst,true));
	if(view.stereographic == false, set(backtonormalfirst,true));
	if(backtonormalfirst, hideTooltip();tween(view.fisheye, 0.0 ,distance(1.0, 0.25), easeOutQuad, WAIT); );
	set(view.stereographic, true);
	set(view.fisheyefovlink, 1.5);
	tween(view.architectural, 0.0, 0.25);
	tween(view.vlookat, 90, distance(179, 1.50));
	tween(view.pannini, 0.0, distance(1.0, 0.75), easeOutQuad, if(panniniViewActivated,restoreViewFromPannini();););
	if(panoview.fovmax LE 150, set(view.fovmax, 150); , set(view.fovmax, get(panoview.fovmax)); );
	tween(view.fisheye, 1.0, distance(1.0, 0.75));
	tween(view.fov, 150, distance(179, 0.75));
</action>

  <!-- Hide / Show Controls -->
  <action name="hideTourControls">set(tour_displaycontrols, false);events.dispatch(hidetourcontrols);</action>
  <action name="showTourControls">set(tour_displaycontrols, true); events.dispatch(showtourcontrols);</action>


  <!-- Sounds Management -->

  <action name="play3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, playpanolocalsounds();););
  </action>
  <action name="stop3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, stoppanolocalsounds();););
  </action>
  <action name="resume3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, 
      set(kill3dSoundOnResume, true);
      if(layer[displayedStandardVideo],
      if(layer[displayedStandardVideo].pausebgsound,
      if(tour_current_played_video,
        set(kill3dSoundOnResume, false);
      );););
      if(layer[webvideodisplay_player],
      if(layer[webvideodisplay_player].pausebgsound,
      if(tour_current_played_web_video,
        set(kill3dSoundOnResume, false);
      );););
      if(tour_current_played_sound_pausesound,
      if(tour_current_played_sound,
        set(kill3dSoundOnResume, false);
      ););
      if(kill3dSoundOnResume,
        resumepanolocalsounds();
      );
    ););
  </action>
  <action name="pause3DLocalSounds">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, pausepanolocalsounds();););
  </action>
  <action name="set3DLocalSoundsVolume">
    if (xml.scene, if (scene[get(xml.scene)].haslocalsounds, setpanolocalsoundsvolume();););
  </action>
  <action name="playTourSounds">
    set(tour_soundson, true);events.dispatch(playtoursoundsevent);
    resumeTourSoundsActions(true,true,true,true,true);
  </action>
  <action name="stopTourSounds">
    set(tour_soundson, false);events.dispatch(stoptoursoundsevent);
    pauseTourSoundsActions(true,true,true,true,true);
  </action>
  <action name="setTourSoundsVolume">
    set(tour_soundsvolume, %1);events.dispatch(changetoursoundsevent);
    set3DLocalSoundsVolume();
  </action>
  <action name="playTourSoundsActions">
    if(%1,
        play3DLocalSounds();
    );
  </action>
  <action name="stopTourSoundsActions">
    if(%1,
      stop3DLocalSounds();
    );
    if(%3,
      stopVideoActionsSounds();
    );
  </action>
  <action name="resumeTourSoundsActions">
    if(%1,
        resume3DLocalSounds();
    );
    if(%3,
      resumeVideoActionsSounds();
    );
  </action>
  <action name="pauseTourSoundsActions">
    if(%1,
      pause3DLocalSounds();
    );
    if(%3,
      pauseVideoActionsSounds();
    );
  </action>
  <action name="stopVideoActionsSounds">
    if(tour_current_played_video,
      if(layer[displayedStandardVideo],
        layer[displayedStandardVideo].stop();
        removelayer(displayedStandardVideo);
        if(layer[displayedStandardVideoOverlayButton], removelayer(displayedStandardVideoOverlayButton); );
        if(layer[displayedStandardVideoOverlay], removelayer(displayedStandardVideoOverlay); );
        delete(tour_current_played_video);
        set(tour_current_played_video_state, 0);
      );
    );
    if(tour_current_played_web_video,
      displayWebVideoObjectClose();
    );
  </action>
  <action name="resumeVideoActionsSounds">
    if(tour_current_played_video,
      set(resumeVideoActionsVerification, true);
      if(tour_current_played_sound,
        if(tour_current_played_video_state LT tour_current_played_sound_state,
          set(resumeVideoActionsVerification, false);
        );
      );
      if(resumeVideoActionsVerification,
        if (tour_soundson,
          if(device.flash OR (device.webgl AND !device.ios),
            div(volume, tour_soundsvolume, 100);
            set(layer[displayedStandardVideo].volume, get(volume));
          ,
            ifnot(device.ios,
              js(kpanotour.Sounds.startVideosSounds(get(volume)));
            ,
              if(tour_soundsvolume GT 0,
                set(layer[displayedStandardVideo].muted, false);
              ,
                set(layer[displayedStandardVideo].muted, true);
              );
            );
          );
        ,
          if(device.flash OR (device.webgl AND !device.ios),
            set(layer[displayedStandardVideo].volume, 0);
          ,
            ifnot(device.ios,
              js(kpanotour.Sounds.stopVideosSounds());
            ,
              set(layer[displayedStandardVideo].muted, true);
            );
          );
        );
      );
    );
  </action>
  <action name="pauseVideoActionsSounds">
    if(tour_current_played_video,
      if(device.flash OR (device.webgl AND !device.ios),
        set(layer[displayedStandardVideo].volume, 0);
      ,
        ifnot(device.ios,
          js(kpanotour.Sounds.stopVideosSounds());
        ,
          set(layer[displayedStandardVideo].muted, true);
        );
      );
    );
  </action>

<action name="viewControlZoomIn">
	if(%1,
		if(%2,
			if(%2 LT view.fovmin,
				zoomto(get(view.fovmin));
			,
				if(%2 LT view.fov,
					zoomto(%2);
				);
			);
		,
			set(fov_moveforce, -1);
			delayedcall(0.1, viewControlZoomStop());
		);
	,
		set(fov_moveforce, -1);
	);
</action>
<action name="viewControlZoomOut">
	if(%1,
		if(%2,
			if(%2 GT view.fovmax,
				zoomto(get(view.fovmax));
			,
				if(%2 GT view.fov,
					zoomto(%2);
				);
			);
		,
			set(fov_moveforce, +1);
			delayedcall(0.1, viewControlZoomStop());
		);
	,
		set(fov_moveforce, +1);
	);
</action>
<action name="viewControlZoomStop">
	set(fov_moveforce, 0);
</action>

  <!-- Fullscreen Management -->
  <action name="exitFullScreen" devices="fullscreensupport">set(tour_fullscreen,false);js(setFullscreen(false));</action>
  <action name="enterFullScreen" devices="fullscreensupport">set(tour_fullscreen,true);js(setFullscreen(true));</action>
  <action name="switchFullScreen">if(tour_fullscreen,exitFullScreen();,enterFullScreen(););</action>

  
  <events name="krpanoExitFullscreenEvent"
    onexitfullscreen="if(tour_fullscreen,exitFullScreenChangeEvent(););"
    keep="true" />

  <action name="exitFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,false);events.dispatch(onexitfullscreen);</action>
  <action name="enterFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,true);events.dispatch(onenterfullscreen);</action>
  <action name="exitFullScreenFallback">set(fullscreen,false);</action>
  <action name="enterFullScreenFallback">set(fullscreen,true);</action>
  
  <action name="resizeFullScreenEvent">delayedcall(0,updatescreen(););</action>

  <!-- FLOORPLAN -->
  <action name="hideFloorplan">set(tour_displayfloorplan, false);events.dispatch(onhidetourfloorplan);</action>
  <action name="showFloorplan">set(tour_displayfloorplan, true); events.dispatch(onshowtourfloorplan);</action>


	<!-- WebVR plugin for VR availability tests -->

	<plugin name="ptpvrmode" devices="html5" keep="true"
		url="%FIRSTXML%/graphics/webvr.js"
		mobilevr_support="true"
		mobilevr_fake_support="false"
		vr_cursor=""
		vr_cursor_enabled="false"
		onavailable="delayedcall(1, checkVrAvailability(););"
		onunavailable="checkVrUnavailable();"
		/>
	<action name="checkVrAvailability">
		if(plugin[ptpvrmode],
			if (plugin[ptpvrmode].isavailable,
				set(tour_vrdevices, true);
				events.dispatch(onvravailable);
			,
				set(tour_vrdevices, false);
			);
		,
			checkVrUnavailable();
		);
	</action>
	<action name="checkVrUnavailable">
		set(tour_vrdevices, false);
		events.dispatch(onvrunavailable);
	</action>
</krpano>